{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction generateRandomBetween(min, max, exclude) {\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nfunction GameScreen(_ref) {\n  var userNumber = _ref.userNumber;\n  var initialGuess = generateRandomBetween(1, 100, userNumber);\n\n  var _useState = useState(initialGuess),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Title, {\n      children: \"Opponenet's Guess\"\n    }), _jsx(NumberContainer, {\n      children: currentGuess\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Higher or lower?\"\n      }), _jsx(PrimaryButton, {\n        children: \"+\"\n      }), _jsx(PrimaryButton, {\n        children: \"-\"\n      })]\n    })]\n  });\n}\n\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24\n  }\n});","map":{"version":3,"sources":["/home/henry/Programming/Zero_To_Mastery/FreeCodeCamp/ReactNative/MaxUdem/NumberGame/starting-project/screens/GameScreen.js"],"names":["useState","NumberContainer","PrimaryButton","Title","generateRandomBetween","min","max","exclude","rndNum","Math","floor","random","GameScreen","userNumber","initialGuess","currentGuess","setCurrentGuess","styles","screen","StyleSheet","create","flex","padding"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,OAAOC,eAAP;AACA,OAAOC,aAAP;AACA,OAAOC,KAAP;;;;AAEA,SAASC,qBAAT,CAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,OAAzC,EAAkD;AAChD,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAAzD;;AAEA,MAAIG,MAAM,KAAKD,OAAf,EAAwB;AACtB,WAAOH,qBAAqB,CAACC,GAAD,EAAMC,GAAN,EAAWC,OAAX,CAA5B;AACD,GAFD,MAEO;AACL,WAAOC,MAAP;AACD;AACF;;AAED,SAASI,UAAT,OAAoC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAClC,MAAMC,YAAY,GAAGV,qBAAqB,CAAC,CAAD,EAAI,GAAJ,EAASS,UAAT,CAA1C;;AACA,kBAAwCb,QAAQ,CAACc,YAAD,CAAhD;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA,eACE,KAAC,KAAD;AAAA;AAAA,MADF,EAEF,KAAC,eAAD;AAAA,gBAAkBH;AAAlB,MAFE,EAGE,MAAC,IAAD;AAAA,iBACE,KAAC,IAAD;AAAA;AAAA,QADF,EAEE,KAAC,aAAD;AAAA;AAAA,QAFF,EAGE,KAAC,aAAD;AAAA;AAAA,QAHF;AAAA,MAHF;AAAA,IADF;AAcD;;AAED,eAAeH,UAAf;AAEA,IAAMK,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,MAAM,EAAE;AACNG,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,OAAO,EAAE;AAFH;AADuB,CAAlB,CAAf","sourcesContent":["import { useState } from \"react\";\nimport { Text, View, StyleSheet } from \"react-native\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\n\nfunction generateRandomBetween(min, max, exclude) {\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nfunction GameScreen({ userNumber }) {\n  const initialGuess = generateRandomBetween(1, 100, userNumber);\n  const [currentGuess, setCurrentGuess] = useState(initialGuess);\n\n  return (\n    <View style={styles.screen}>\n      <Title>Opponenet's Guess</Title>\n  <NumberContainer>{currentGuess}</NumberContainer>\n      <View>\n        <Text>Higher or lower?</Text>\n        <PrimaryButton>+</PrimaryButton>\n        <PrimaryButton>-</PrimaryButton>\n\n        {/* + -  */}\n      </View>\n      {/* <View>LOG ROUNDS</View> */}\n    </View>\n  );\n}\n\nexport default GameScreen;\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}