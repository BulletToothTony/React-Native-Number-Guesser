{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction generateRandomBetween(min, max, exclude) {\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nvar minBoundary = 1;\nvar maxBoundary = 100;\n\nfunction GameScreen(_ref) {\n  var userNumber = _ref.userNumber;\n  var initialGuess = generateRandomBetween(minBoundary, maxBoundary, userNumber);\n\n  var _useState = useState(initialGuess),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  function nextGuessHandler(direction) {\n    if (direction === 'lower') {\n      maxBoundary = currentGuess;\n    } else {\n      minBoundary = currentGuess + 1;\n    }\n\n    var newRndNumber = generateRandomBetween(minBoundary, maxBoundary, currentGuess);\n    setCurrentGuess(newRndNumber);\n  }\n\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Title, {\n      children: \"Opponenet's Guess\"\n    }), _jsx(NumberContainer, {\n      children: currentGuess\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Higher or lower?\"\n      }), _jsxs(View, {\n        children: [_jsx(PrimaryButton, {\n          onPress: nextGuessHandler('higher'),\n          children: \"+\"\n        }), _jsx(PrimaryButton, {\n          onPress: nextGuessHandler('lower'),\n          children: \"-\"\n        })]\n      })]\n    })]\n  });\n}\n\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24\n  }\n});","map":{"version":3,"sources":["/home/henry/Programming/Zero_To_Mastery/FreeCodeCamp/ReactNative/MaxUdem/NumberGame/starting-project/screens/GameScreen.js"],"names":["useState","NumberContainer","PrimaryButton","Title","generateRandomBetween","min","max","exclude","rndNum","Math","floor","random","minBoundary","maxBoundary","GameScreen","userNumber","initialGuess","currentGuess","setCurrentGuess","nextGuessHandler","direction","newRndNumber","styles","screen","StyleSheet","create","flex","padding"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,OAAOC,eAAP;AACA,OAAOC,aAAP;AACA,OAAOC,KAAP;;;;AAEA,SAASC,qBAAT,CAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,OAAzC,EAAkD;AAChD,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAAzD;;AAEA,MAAIG,MAAM,KAAKD,OAAf,EAAwB;AACtB,WAAOH,qBAAqB,CAACC,GAAD,EAAMC,GAAN,EAAWC,OAAX,CAA5B;AACD,GAFD,MAEO;AACL,WAAOC,MAAP;AACD;AACF;;AAED,IAAII,WAAW,GAAG,CAAlB;AACA,IAAIC,WAAW,GAAG,GAAlB;;AAEA,SAASC,UAAT,OAAoC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAClC,MAAMC,YAAY,GAAGZ,qBAAqB,CAACQ,WAAD,EAAcC,WAAd,EAA2BE,UAA3B,CAA1C;;AACA,kBAAwCf,QAAQ,CAACgB,YAAD,CAAhD;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AAEA,WAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AACnC,QAAIA,SAAS,KAAK,OAAlB,EAA2B;AACvBP,MAAAA,WAAW,GAAGI,YAAd;AACH,KAFD,MAEO;AACHL,MAAAA,WAAW,GAAGK,YAAY,GAAG,CAA7B;AACH;;AACD,QAAMI,YAAY,GAAGjB,qBAAqB,CAACQ,WAAD,EAAcC,WAAd,EAA2BI,YAA3B,CAA1C;AACAC,IAAAA,eAAe,CAACG,YAAD,CAAf;AAED;;AAED,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA,eACE,KAAC,KAAD;AAAA;AAAA,MADF,EAEF,KAAC,eAAD;AAAA,gBAAkBN;AAAlB,MAFE,EAGE,MAAC,IAAD;AAAA,iBACE,KAAC,IAAD;AAAA;AAAA,QADF,EAEE,MAAC,IAAD;AAAA,mBACA,KAAC,aAAD;AAAe,UAAA,OAAO,EAAEE,gBAAgB,CAAC,QAAD,CAAxC;AAAA;AAAA,UADA,EAEA,KAAC,aAAD;AAAe,UAAA,OAAO,EAAEA,gBAAgB,CAAC,OAAD,CAAxC;AAAA;AAAA,UAFA;AAAA,QAFF;AAAA,MAHF;AAAA,IADF;AAgBD;;AAED,eAAeL,UAAf;AAEA,IAAMQ,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,MAAM,EAAE;AACNG,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,OAAO,EAAE;AAFH;AADuB,CAAlB,CAAf","sourcesContent":["import { useState } from \"react\";\nimport { Text, View, StyleSheet } from \"react-native\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\n\nfunction generateRandomBetween(min, max, exclude) {\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nlet minBoundary = 1;\nlet maxBoundary = 100;\n\nfunction GameScreen({ userNumber }) {\n  const initialGuess = generateRandomBetween(minBoundary, maxBoundary, userNumber);\n  const [currentGuess, setCurrentGuess] = useState(initialGuess);\n\n  function nextGuessHandler(direction) { //direction => 'lower', 'greater'\n    if (direction === 'lower') {\n        maxBoundary = currentGuess;\n    } else {\n        minBoundary = currentGuess + 1;\n    }\n    const newRndNumber = generateRandomBetween(minBoundary, maxBoundary, currentGuess)\n    setCurrentGuess(newRndNumber);\n\n  }\n\n  return (\n    <View style={styles.screen}>\n      <Title>Opponenet's Guess</Title>\n  <NumberContainer>{currentGuess}</NumberContainer>\n      <View>\n        <Text>Higher or lower?</Text>\n        <View>\n        <PrimaryButton onPress={nextGuessHandler('higher')}>+</PrimaryButton>\n        <PrimaryButton onPress={nextGuessHandler('lower')}>-</PrimaryButton>\n        </View>\n\n        {/* + -  */}\n      </View>\n      {/* <View>LOG ROUNDS</View> */}\n    </View>\n  );\n}\n\nexport default GameScreen;\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}